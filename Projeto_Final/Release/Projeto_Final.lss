
Projeto_Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  000001be  00000252  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800114  00800114  00000266  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000266  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000278  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee eb       	ldi	r30, 0xBE	; 190
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e1       	ldi	r26, 0x14	; 20
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 31       	cpi	r26, 0x1E	; 30
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 89 00 	call	0x112	; 0x112 <main>
  9e:	0c 94 dd 00 	jmp	0x1ba	; 0x1ba <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Init>:
  a6:	0e 94 a4 00 	call	0x148	; 0x148 <printf_init>
  aa:	8e e0       	ldi	r24, 0x0E	; 14
  ac:	91 e0       	ldi	r25, 0x01	; 1
  ae:	0e 94 ad 00 	call	0x15a	; 0x15a <puts>
  b2:	87 b1       	in	r24, 0x07	; 7
  b4:	81 7c       	andi	r24, 0xC1	; 193
  b6:	87 b9       	out	0x07, r24	; 7
  b8:	88 b1       	in	r24, 0x08	; 8
  ba:	8e 63       	ori	r24, 0x3E	; 62
  bc:	88 b9       	out	0x08, r24	; 8
  be:	08 95       	ret

000000c0 <Sensores>:
  c0:	35 9b       	sbis	0x06, 5	; 6
  c2:	04 c0       	rjmp	.+8      	; 0xcc <Sensores+0xc>
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	80 93 18 01 	sts	0x0118, r24
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <Sensores+0x10>
  cc:	10 92 18 01 	sts	0x0118, r1
  d0:	34 9b       	sbis	0x06, 4	; 6
  d2:	04 c0       	rjmp	.+8      	; 0xdc <Sensores+0x1c>
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	80 93 17 01 	sts	0x0117, r24
  da:	02 c0       	rjmp	.+4      	; 0xe0 <Sensores+0x20>
  dc:	10 92 17 01 	sts	0x0117, r1
  e0:	33 9b       	sbis	0x06, 3	; 6
  e2:	04 c0       	rjmp	.+8      	; 0xec <Sensores+0x2c>
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	80 93 16 01 	sts	0x0116, r24
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <Sensores+0x30>
  ec:	10 92 16 01 	sts	0x0116, r1
  f0:	32 9b       	sbis	0x06, 2	; 6
  f2:	04 c0       	rjmp	.+8      	; 0xfc <Sensores+0x3c>
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	80 93 15 01 	sts	0x0115, r24
  fa:	02 c0       	rjmp	.+4      	; 0x100 <Sensores+0x40>
  fc:	10 92 15 01 	sts	0x0115, r1
 100:	31 9b       	sbis	0x06, 1	; 6
 102:	04 c0       	rjmp	.+8      	; 0x10c <Sensores+0x4c>
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	80 93 14 01 	sts	0x0114, r24
 10a:	08 95       	ret
 10c:	10 92 14 01 	sts	0x0114, r1
 110:	08 95       	ret

00000112 <main>:
 112:	0e 94 53 00 	call	0xa6	; 0xa6 <Init>
 116:	0e 94 60 00 	call	0xc0	; 0xc0 <Sensores>
 11a:	fd cf       	rjmp	.-6      	; 0x116 <main+0x4>

0000011c <usart_putchar>:
 11c:	90 91 c0 00 	lds	r25, 0x00C0
 120:	95 ff       	sbrs	r25, 5
 122:	fc cf       	rjmp	.-8      	; 0x11c <usart_putchar>
 124:	80 93 c6 00 	sts	0x00C6, r24
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	08 95       	ret

0000012e <usart_init>:
 12e:	80 e1       	ldi	r24, 0x10	; 16
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	90 93 c5 00 	sts	0x00C5, r25
 136:	80 93 c4 00 	sts	0x00C4, r24
 13a:	88 e1       	ldi	r24, 0x18	; 24
 13c:	80 93 c1 00 	sts	0x00C1, r24
 140:	8e e0       	ldi	r24, 0x0E	; 14
 142:	80 93 c2 00 	sts	0x00C2, r24
 146:	08 95       	ret

00000148 <printf_init>:
 148:	0e 94 97 00 	call	0x12e	; 0x12e <usart_init>
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	90 93 1b 01 	sts	0x011B, r25
 154:	80 93 1a 01 	sts	0x011A, r24
 158:	08 95       	ret

0000015a <puts>:
 15a:	0f 93       	push	r16
 15c:	1f 93       	push	r17
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	e0 91 1a 01 	lds	r30, 0x011A
 166:	f0 91 1b 01 	lds	r31, 0x011B
 16a:	23 81       	ldd	r18, Z+3	; 0x03
 16c:	21 ff       	sbrs	r18, 1
 16e:	1b c0       	rjmp	.+54     	; 0x1a6 <puts+0x4c>
 170:	8c 01       	movw	r16, r24
 172:	d0 e0       	ldi	r29, 0x00	; 0
 174:	c0 e0       	ldi	r28, 0x00	; 0
 176:	f8 01       	movw	r30, r16
 178:	81 91       	ld	r24, Z+
 17a:	8f 01       	movw	r16, r30
 17c:	60 91 1a 01 	lds	r22, 0x011A
 180:	70 91 1b 01 	lds	r23, 0x011B
 184:	db 01       	movw	r26, r22
 186:	18 96       	adiw	r26, 0x08	; 8
 188:	ed 91       	ld	r30, X+
 18a:	fc 91       	ld	r31, X
 18c:	19 97       	sbiw	r26, 0x09	; 9
 18e:	88 23       	and	r24, r24
 190:	31 f0       	breq	.+12     	; 0x19e <puts+0x44>
 192:	09 95       	icall
 194:	89 2b       	or	r24, r25
 196:	79 f3       	breq	.-34     	; 0x176 <puts+0x1c>
 198:	df ef       	ldi	r29, 0xFF	; 255
 19a:	cf ef       	ldi	r28, 0xFF	; 255
 19c:	ec cf       	rjmp	.-40     	; 0x176 <puts+0x1c>
 19e:	8a e0       	ldi	r24, 0x0A	; 10
 1a0:	09 95       	icall
 1a2:	89 2b       	or	r24, r25
 1a4:	19 f0       	breq	.+6      	; 0x1ac <puts+0x52>
 1a6:	8f ef       	ldi	r24, 0xFF	; 255
 1a8:	9f ef       	ldi	r25, 0xFF	; 255
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <puts+0x56>
 1ac:	8d 2f       	mov	r24, r29
 1ae:	9c 2f       	mov	r25, r28
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	1f 91       	pop	r17
 1b6:	0f 91       	pop	r16
 1b8:	08 95       	ret

000001ba <_exit>:
 1ba:	f8 94       	cli

000001bc <__stop_program>:
 1bc:	ff cf       	rjmp	.-2      	; 0x1bc <__stop_program>
